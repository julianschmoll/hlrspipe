#!/bin/bash
#PBS -A zmcbeber
#PBS -N {ASS_FILE_NAME}
# PBS -l nodes=1:ppn=24
# PBS -l walltime=00:02:00
#PBS -l select=1:node_type=rome,walltime=0:20:00

## In den PBS-Header muss später die HdM-Queue eingetragen werden.
## Damit wird verhindert, dass Render-Jobs in die Testqueue
## des HLRS übergeben werden. Das betrifft alle Jobs, die weniger
## als 30 Minuten rendern. Insgesamt stehen dann schneller mehr Ressourcen zur Verfügung.

set -x

   cd /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen

   if [ $? -ne 0 ]; then
     echo "Error: can't change into /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen Directory!!!"
     echo " aborting..."
     exit 1
   fi

   SEQUENZ_NAME={SCENE_NAME}
   DIRECTORY_NAME=/lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/
   STATUS_FILE=/lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/{ASS_FILE_NAME}.status

#root paths
export ARNOLD_ROOT="/zhome/academic/HLRS/zmc/zmcbeber/Arnold_SDK-7.1.3.1_Linux"
export ASS_ROOT="/lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1"

# substitue and replace fullpaths in ass-file:
export ARNOLD_PATHMAP="/lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/pathmap.json"

PATH=$PATH:/zhome/academic/HLRS/zmc/zmcbeber/Arnold_SDK-7.1.3.1_Linux/bin/:/zhome/academic/HLRS/zmc/zmcbeber/Arnold_SDK-7.1.3.1_Linux/bin
export PATH

#kick path
export KICK="/zhome/academic/HLRS/zmc/zmcbeber/Arnold_SDK-7.1.3.1_Linux/bin/kick"

#custom attributes (-dw for disable preview)
export CUSTOM_ATTRIBUTES="-dw -dp -nokeypress -v 6"

#ld library path
export LD_LIBRARY_PATH="/zhome/academic/HLRS/zmc/zmcbeber/Arnold_SDK-7.1.3.1_Linux/bin"

#pluging or shader path
export SHADER="-l /zhome/academic/HLRS/zmc/zmcbeber/Arnold_SDK-7.1.3.1_Linux/shaders"

#texture path
export TEXTURES="-set options.texture_searchpath /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}"

#procedural path (path to ass files)
export PROCEDURALS="-set options.procedural_searchpath /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}"

#ocio-path 
export OCIOPATH="-set color_manager_ocio.config /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/ocio/aces_1.2/config.ocio"

#arnold license
export solidangle_LICENSE=""2080@ca-lic.hdm-stuttgart.de""
export RLM_LICENSE="(not set)"
export ADSKFLEX_LICENSE_FILE="@ca-lic.hdm-stuttgart.de"
export LM_LICENSE_FILE="(not set)"

## 5053 ist standardmäßig als Port festgelegt für den RLM Service.
## Der Port kann in der License-File von Solidangle geändert werden.
## Nach einer Änderung muss der Lizenzserver neugestartet werden.
## Je nach Lizenzpaket müssen unterschiedliche Variablen gesetzt werden.

#saving path
export SAVING_PATH="/lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/result/{ASS_FILE_NAME}.exr"


   if [ ! -f /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/ ]; then
        echo " Error: File /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/ does not exist. Abort..."
        exit 1
   fi

   if [ ! -f /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/{ASS_FILE_NAME}.status} ]; then
     echo " Error: Status file /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/{ASS_FILE_NAME}.status} is not available. This is a unknown situation Abort..."
     exit 1
   fi

## Status wird gecheckt und auf "running" gesetzt, um zu verhindern,
## dass Jobs mehrfach abgeschickt werden können.
   STATUS=`cat /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/{ASS_FILE_NAME}.status}`
   if [ "$STATUS" != "job_queued" ]; then
      echo " ERROR $0  job status is not job_queued at Job start. Aborting"
      # exit 1
   fi
   echo "running" > /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/{ASS_FILE_NAME}.status}


   if [ ! -d /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/ ]; then
      mkdir -p /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/
      if [ $? -ne 0 ]; then
        echo " Error: can't create Directory /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/. Abort..."
        echo "ERROR   can't create directory for output" > /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/{ASS_FILE_NAME}.status}
        exit 1
      fi
   fi

   if [ ! -d /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/ ]; then
      mkdir -p /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/
      if [ $? -ne 0 ]; then
        echo " Error: can't create Directory /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/. Abort..."
        echo "ERROR   can't create directory for log" > /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/{ASS_FILE_NAME}.status}
        exit 1
      fi
   fi

#start rendering
${KICK} -i /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/{ASS_FILE_NAME}    \
   -set driver_exr.filename /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/result/{ASS_FILE_NAME}.exr    \
   -o /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/result/{ASS_FILE_NAME}.exr \
   -logfile /lustre/hpe/ws10/ws10.1/ws/zmcbeber-workspace1/zmcbeber-workspace1/sequenzen/{SCENE_NAME}/{ASS_FILE_NAME}.log
exit