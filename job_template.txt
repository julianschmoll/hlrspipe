#PBS -A zmcbeber
#PBS -N {ASS_FILE_NAME}
# PBS -l nodes=1:ppn=24
# PBS -l walltime=00:02:00
#PBS -l select=1:node_type=rome,walltime=0:20:00

## In den PBS-Header muss später die HdM-Queue eingetragen werden.
## Damit wird verhindert, dass Render-Jobs in die Testqueue
## des HLRS übergeben werden. Das betrifft alle Jobs, die weniger
## als 30 Minuten rendern. Insgesamt stehen dann schneller mehr Ressourcen zur Verfügung.

## Basierend auf Version 1.3   5. Nov. 2013 erstellt von Tobei (HLRS)
## Bearbeitet zuletzt am 07.09.2018 von Daniel Pavelka (HdM)
## Bearbeitet von Bernd

set -x

   cd {WORKSPACE_DIR_NAME}


   if [ $? -ne 0 ]; then
     echo "Error: can't change into {WORKSPACE_DIR_NAME} Directory!!!"
     echo " aborting..."
     exit 1
   fi

   SEQUENZ_NAME={SEQUENZ_NAME}
   INPUT_DIR_NAME={WORKSPACE_DIR_NAME}/{SEQUENZ_NAME}/{ASS_FILE_NAME}
   OUTPUT_DIR_NAME={WORKSPACE_DIR_NAME}/{SEQUENZ_NAME}/{ASS_FILE_NAME}.result
   LOG_DIR_NAME={WORKSPACE_DIR_NAME}/{SEQUENZ_NAME}/{ASS_FILE_NAME}.log
   STATUS_DIR_NAME={WORKSPACE_DIR_NAME}/{SEQUENZ_NAME}/{ASS_FILE_NAME}.status

   STATUS_FILE=${STATUS_DIR_NAME}/{ASS_FILE_NAME}.status

#root paths
export ARNOLD_ROOT="{ARNOLD_ROOT_PATH}"
export ASS_ROOT="{WORKSPACE_DIR_NAME}"

# substitue and replace fullpaths in ass-file:
# export ARNOLD_PATHMAP="{WORKSPACE_DIR_NAME}/pathmapPanda.json"
export ARNOLD_PATHMAP="{WORKSPACE_DIR_NAME}/{SEQUENZ_NAME}/pathmap.json"

PATH=$PATH:${ARNOLD_ROOT}/bin/:${ARNOLD_ROOT}/bin
export PATH

#kick path
export KICK="$ARNOLD_ROOT/bin/kick"

#custom attributes (-dw for disable preview)
export CUSTOM_ATTRIBUTES="-dw -dp -nokeypress -v 6"

#ld library path
export LD_LIBRARY_PATH="$ARNOLD_ROOT/bin"

#pluging or shader path
export SHADER="-l $ARNOLD_ROOT/shaders"

#texture path
export TEXTURES="-set options.texture_searchpath $ASS_ROOT/sequenzen/{SEQUENZ_NAME}"

#procedural path (path to ass files)
export PROCEDURALS="-set options.procedural_searchpath $ASS_ROOT/sequenzen/{SEQUENZ_NAME}"

#Bernd....
#ocio-path should also be on the arnold-distribution or....
# export OCIOPATH="-set color_manager_ocio.config $ARNOLD_ROOT/ocio/configs/arnold/config.ocio"
export OCIOPATH="-set color_manager_ocio.config $ASS_ROOT/ocio/aces_1.2/config.ocio"

#arnold license
export solidangle_LICENSE=""2080@ca-lic.hdm-stuttgart.de""
export RLM_LICENSE="(not set)"
export ADSKFLEX_LICENSE_FILE="@ca-lic.hdm-stuttgart.de"
export LM_LICENSE_FILE="(not set)"

## 5053 ist standardmäßig als Port festgelegt für den RLM Service.
## Der Port kann in der License-File von Solidangle geändert werden.
## Nach einer Änderung muss der Lizenzserver neugestartet werden.
## Je nach Lizenzpaket müssen unterschiedliche Variablen gesetzt werden.

#saving path
export SAVING_PATH="{WORKSPACE_DIR_NAME}/{SEQUENZ_NAME}/{ASS_FILE_NAME}.exr"


   if [ ! -f ${INPUT_DIR_NAME} ]; then
        echo " Error: File ${INPUT_DIR_NAME} does not exist. Abort..."
        exit 1
   fi

   if [ ! -f ${STATUS_FILE} ]; then
     echo " Error: Status file ${STATUS_FILE} is not available. This is a unknown situation Abort..."
     exit 1
   fi

## Status wird gecheckt und auf "running" gesetzt, um zu verhindern,
## dass Jobs mehrfach abgeschickt werden können.
   STATUS=`cat ${STATUS_FILE}`
   if [ "$STATUS" != "job_queued" ]; then
      echo " ERROR $0  job status is not job_queued at Job start. Aborting"
      # exit 1
   fi
   echo "running" > ${STATUS_FILE}


   if [ ! -d ${OUTPUT_DIR_NAME} ]; then
      mkdir -p ${OUTPUT_DIR_NAME}
      if [ $? -ne 0 ]; then
        echo " Error: can't create Directory ${OUTPUT_DIR_NAME}. Abort..."
        echo "ERROR   can't create directory for output" > ${STATUS_FILE}
        exit 1
      fi
   fi



   if [ ! -d ${LOG_DIR_NAME} ]; then
      mkdir -p ${LOG_DIR_NAME}
      if [ $? -ne 0 ]; then
        echo " Error: can't create Directory ${LOG_DIR_NAME}. Abort..."
        echo "ERROR   can't create directory for log" > ${STATUS_FILE}
        exit 1
      fi
   fi

# if we want to render seperate files of pathes:
# -set defaultArnoldDriver@driver_exr.RGBA.direct_diffuse.filename "C:/temp/direct_diffuse.exr"



#start rendering
${KICK} -i {WORKSPACE_DIR_NAME}/{SEQUENZ_NAME}/{ASS_FILE_NAME}    \
   ${CUSTOM_ATTRIBUTES} ${SHADER} ${TEXTURES} ${PROCEDURALS} ${OCIOPATH}   \
   -set driver_exr.filename ${SAVING_PATH}    \
   -o ${SAVING_PATH} \
   -logfile  ${LOG_DIR_NAME}/{ASS_FILE_NAME}.log

   #  now create, submit, ... next jobs
   job_generator.sh  ${SEQUENZ_NAME}

exit